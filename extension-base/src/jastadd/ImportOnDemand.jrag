
aspect ImportOnDemand {

coll HashSet<Integer> CompilationUnit.onDemlines() [new HashSet<Integer>()] with add root CompilationUnit;

syn HashSet<String> CompilationUnit.importTypesOnDemand() {
    HashSet<String> temp = new HashSet<String>();
    for(ImportDecl decl : getImportDeclList()) {
        if(decl.isOnDemand()) {
            for(String type : usedTypes()) {
                if(decl.importedTypes(type).toString().equals("org.extendj.ast.GenericInterfaceDecl") ||
                 decl.importedTypes(type).toString().equals("org.extendj.ast.ClassDecl") ||
                 decl.importedTypes(type).toString().equals("org.extendj.ast.GenericClassDecl") ) {
                     temp.add(decl.getAccess().packageName() + "." + type);
                 }
            }
        }
    }
    return temp;
}

TypeImportOnDemandDecl contributes lineNumber()
when isOnDemand()
to CompilationUnit.onDemlines()
for compilationUnit();


}
