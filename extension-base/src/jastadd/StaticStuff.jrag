aspect StaticStuff{





    coll HashSet<String> CompilationUnit.staticMethods() [new HashSet<String>()] with add root CompilationUnit;
    coll HashSet<String> CompilationUnit.variableAccess() [new HashSet<String>()] with add root CompilationUnit;
    coll HashSet<SingleStaticImportDecl> CompilationUnit.staticImports() [new HashSet<SingleStaticImportDecl>()] with add root CompilationUnit;



    MethodAccess contributes getID()
    when !existsHereOrInSuperClass() && !hasParentDot()
    to CompilationUnit.staticMethods()
    for compilationUnit();

    VarAccess contributes getID()
    to CompilationUnit.variableAccess()
    for compilationUnit();

    VarAccess contributes dotAccess()
    to CompilationUnit.variableAccess()
    for compilationUnit();

    syn String VarAccess.dotAccess() {
        if(hasParentDot()) {
            Access a = (Access)parentDot().getLeft();
            return a.uberID();
        }

        return "";
    }


    syn boolean MethodAccess.existsHereOrInSuperClass() {
        for(MethodDecl md : compilationUnit().methods()){
            if(decl().equals(md)){
                return true;
            }
        }
        for(MethodDecl md : compilationUnit().superClassMethods()){
            if(decl().equals(md)){
                return true;
            }
        }


        return false;
    }



    SingleStaticImportDecl contributes this
        to CompilationUnit.staticImports()
        for compilationUnit();




}
